<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="accounts-papi-suite.xml" />
	<munit:test name="accounts-papi-main-test" doc:id="807f1a6f-3e4d-4d35-b6da-82b83378aff0" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock APIkit Router" doc:id="1daaa72b-5451-4ae9-af50-379665bb9806" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="7501f1ca-7561-4bf3-a61e-79c2c02c6727" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json  --- readUrl('classpath://accountspapimaintest\mock_payload.dwl')]" mediaType="application/json " encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://accountspapimaintest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://accountspapimaintest\mock_variable_.dwl')]" />
						<munit-tools:variable key="country" value="#[output application/json --- readUrl('classpath://accountspapimaintest\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="httpStatus" value="#[readUrl('classpath://accountspapimaintest\mock_variable_2.dwl')]" />
						<munit-tools:variable key="isoCode" value="#[output application/json --- readUrl('classpath://accountspapimaintest\mock_variable_3.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="accountid" value="#[output application/java --- readUrl('classpath://accountspapimaintest\mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="postData" value="#[output application/json --- readUrl('classpath://accountspapimaintest\mock_variable_5.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="6aebb9ef-b436-4db9-a10b-db200b21b36b" >
				<munit:payload value="#[output application/json  --- readUrl('classpath://accountspapimaintest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://accountspapimaintest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to accounts-papi-main" doc:id="6b0023f0-09c6-4e6b-8605-73cb1e25d13a" name="accounts-papi-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="a9e9b675-ba4b-4fca-b3f2-0cf422706e30" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import accountspapimaintest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="accounts-papi-console-test" doc:id="2273f8ed-44bb-48a3-aa77-faf213afe303" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="94017c48-8f48-4d55-81bf-a77480c34c41" processor="http:listener">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="/console/*" attributeName="path" />
					<munit-tools:with-attribute whereValue="HTTP_Listener_config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="ac778b4d-b24e-48d6-b544-51691c9c6ea4" processor="apikit:console">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="accounts-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="712f8556-6b25-4124-a499-77f6e5255758" >
				<munit:payload value="#[readUrl('classpath://accountspapiconsoletest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://accountspapiconsoletest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to accounts-papi-console" doc:id="0578bcc6-f58d-47c5-88e6-eeed2fdea298" name="accounts-papi-console"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="8ec8beaa-17d3-46ec-895e-caad856e5c5d" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import accountspapiconsoletest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="put:\accounts\(accountid):application\json:accounts-papi-config-test" doc:id="2674de73-e39e-448c-ba06-12c76f66c905" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="a16ca1b6-ee3a-4344-ad72-75d78bc18250" >
				<munit:payload value="#[output application/json  --- readUrl('classpath://putaccountsaccountidapplicationjsonaccountspapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://putaccountsaccountidapplicationjsonaccountspapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://putaccountsaccountidapplicationjsonaccountspapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to put:\accounts\(accountid):application\json:accounts-papi-config" doc:id="0de441a3-df16-4963-ac95-aff537e80e4f" name="put:\accounts\(accountid):application\json:accounts-papi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="2d679b0c-e6eb-46a0-b262-6f4b3e137d47" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import putaccountsaccountidapplicationjsonaccountspapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Flow Reference" doc:id="d8f40211-d526-460c-a9bc-46737415fa1f" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8fdc2216-a0d4-4465-bbd2-900775667fd6" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\accounts:application\json:accounts-papi-config-test" doc:id="565f3505-09dc-4354-91d3-17aff94c2b5a" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="fc95435a-1c59-4ba8-9c02-1dc5ec3b92e7" >
				<munit:payload value="#[output application/json  --- readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\accounts:application\json:accounts-papi-config" doc:id="b5362748-63fc-4302-8784-cefe81fae666" name="post:\accounts:application\json:accounts-papi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="e8e7e835-88f5-4f27-a66e-0c40a174c445" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postaccountsapplicationjsonaccountspapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Flow Reference" doc:id="732a6491-cf92-4826-8cb9-81d60cd929cb" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="41df8420-183d-41e1-b796-16c08e334e57" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="accounts-papi-suiteTest-APIKIT:BAD_REQUEST" doc:id="dc579466-8e66-4777-9128-9b7ab487bb97" expectedErrorType="APIKIT:BAD_REQUEST" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="052a3a5c-efe9-4c89-9fd5-96da33e33b03" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="accounts-papi-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="7501f1ca-7561-4bf3-a61e-79c2c02c6727" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:BAD_REQUEST" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="d8220e8d-82fa-4f88-b436-d7c6fbf49886" name="accounts-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="0c539722-9a85-4a0b-bc8c-a2cfe083c764" actual="#[vars.httpStatus]" expected="#[400]" />
		</munit:validation>
	</munit:test>
	<munit:test name="accounts-papi-suiteTest-APIKIT:METHOD_NOT_ALLOWED" doc:id="c4cd8feb-9a28-43a1-9d3a-576a6b8fce7a" expectedErrorType="APIKIT:METHOD_NOT_ALLOWED" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="7d04b2e7-5e40-4893-bf1e-e5bd78b8333e" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="accounts-papi-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="7501f1ca-7561-4bf3-a61e-79c2c02c6727" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:METHOD_NOT_ALLOWED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="99dec3aa-a2ea-42fd-b801-75a7f216f2be" name="accounts-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="df2dbc09-44c2-40c7-b8ff-d46d02b0c1ca" actual="#[vars.httpStatus]" expected="#[405]" />
		</munit:validation>
	</munit:test>
	<munit:test name="accounts-papi-suiteTest-APIKIT:NOT_ACCEPTABLE" doc:id="9aa214d0-e34d-49be-8ad4-82f3926ddcd3" expectedErrorType="APIKIT:NOT_ACCEPTABLE" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="0a4e3c3f-6009-4779-873b-ac99b6f2282f" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="accounts-papi-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="7501f1ca-7561-4bf3-a61e-79c2c02c6727" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_ACCEPTABLE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="9d8dfcc9-44e3-4f12-8694-e806b2aa5361" name="accounts-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="2318769f-53a3-4a06-9d03-40a30d233e6f" actual="#[vars.httpStatus]" expected="#[406]" />
		</munit:validation>
	</munit:test>
	<munit:test name="accounts-papi-suiteTest-APIKIT:NOT_FOUND" doc:id="529f6785-a004-4bdf-a737-e63139ec526f" expectedErrorType="APIKIT:NOT_FOUND" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="28a41ea7-4b1f-4819-a6e6-4c75762e18a8" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="accounts-papi-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="7501f1ca-7561-4bf3-a61e-79c2c02c6727" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="2242df45-53ab-4a25-998f-8b6d307d429f" name="accounts-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="361bd4c1-9e23-4d61-a6af-50bb6222b07c" actual="#[vars.httpStatus]" expected="#[404]" />
		</munit:validation>
	</munit:test>
	<munit:test name="accounts-papi-suiteTest-APIKIT:NOT_IMPLEMENTED" doc:id="1a53e8ef-3ccb-489b-a714-38f2de4eb12a" expectedErrorType="APIKIT:NOT_IMPLEMENTED" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="59a5685c-1a8b-405e-9e7a-5bab40d84ad6" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="accounts-papi-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="7501f1ca-7561-4bf3-a61e-79c2c02c6727" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_IMPLEMENTED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="cf8806a8-acc0-4f5a-91de-ff6da3d81713" name="accounts-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="16507928-9f33-453b-9194-69ac0135aec3" actual="#[vars.httpStatus]" expected="#[501]" />
		</munit:validation>
	</munit:test>
	<munit:test name="accounts-papi-suiteTest-APIKIT:UNSUPPORTED_MEDIA_TYPE" doc:id="427c7a09-814b-402f-9fcc-243ac1fa1af4" expectedErrorType="APIKIT:UNSUPPORTED_MEDIA_TYPE" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="8b6a5876-1cc2-47d5-932f-c85f83f0679d" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="accounts-papi-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="7501f1ca-7561-4bf3-a61e-79c2c02c6727" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:UNSUPPORTED_MEDIA_TYPE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="2a213066-c9bb-4372-8400-57815078f001" name="accounts-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="0935cc89-3da2-426f-8370-40371af6f677" actual="#[vars.httpStatus]" expected="#[415]" />
		</munit:validation>
	</munit:test>
	<munit:test name="accounts-papi-suiteTest-APIKIT:ANY" doc:id="3dce5469-29f8-401b-ad9c-6b2f817074d9" expectedErrorType="APIKIT:ANY" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="d775fa35-eec8-4b4a-9097-845c274ba42d" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="accounts-papi-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="7501f1ca-7561-4bf3-a61e-79c2c02c6727" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:ANY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="f0c398c9-64c0-4c08-81d6-e1f5b768544e" name="accounts-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="280148a7-361a-4bef-868e-ffa893850e2b" />
		</munit:validation>
	</munit:test>


</mule>
